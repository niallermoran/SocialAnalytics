{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflows_extract_phrase_logicapp_name": {
      "defaultValue": "extract_phrase_logicapp",
      "type": "String"
    },
    "connections_sql_externalid": {
      "defaultValue": "needs to be replaced",
      "type": "String"
    },
    "connections_textanalytics_externalid": {
      "defaultValue": "",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_extract_phrase_logicapp_name')]",
      "location": "northeurope",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 2
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "For_each": {
              "foreach": "@body('Get_Tweets_with_No_Phrases_Extracted')?['value']",
              "actions": {
                "Condition": {
                  "actions": {
                    "Extract_Phrases": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "documents": [
                            {
                              "id": "@items('For_each')?['TwitterID']",
                              "language": "@items('For_each')?['TweetLanguageCode']",
                              "text": "@items('For_each')?['Body']"
                            }
                          ]
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/text/analytics/v2.1/keyPhrases"
                      }
                    },
                    "For_each_3": {
                      "foreach": "@body('Extract_Phrases')?['documents']",
                      "actions": {
                        "For_each_key_phrase": {
                          "foreach": "@items('For_each_3')?['keyPhrases']",
                          "actions": {
                            "Execute_stored_procedure_(V2)": {
                              "runAfter": {},
                              "type": "ApiConnection",
                              "inputs": {
                                "body": {
                                  "Phrase": "@{items('For_each_key_phrase')}",
                                  "TweetID": "@items('For_each')?['ID']"
                                },
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['sql_1']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[CreatePhrase]'))}"
                              }
                            }
                          },
                          "runAfter": {},
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Extract_Phrases": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Update_row_(V2)": {
                      "runAfter": {
                        "For_each_3": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "ArePhrasesExtracted": true
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['sql']['connectionId']"
                          }
                        },
                        "method": "patch",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[Tweets]'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each')?['ID']))}"
                      }
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@items('For_each')",
                            "@null"
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@items('For_each')?['ID']",
                            ""
                          ]
                        }
                      },
                      {
                        "not": {
                          "equals": [
                            "@items('For_each')?['ID']",
                            "@null"
                          ]
                        }
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Get_Tweets_with_No_Phrases_Extracted": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_Tweets_with_No_Phrases_Extracted": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[viewTweetsWithNoPhrases]'))}/items"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "cognitiveservicestextanalytics": {
                "connectionId": "[parameters('connections_textanalytics_externalid')]",
                "connectionName": "textanalytics",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/northeurope/managedApis/cognitiveservicestextanalytics')]"
              },
              "sql": {
                "connectionId": "[parameters('connections_sql_externalid')]",
                "connectionName": "sql",
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/northeurope/managedApis/sql')]"
              }
            }
          }
        }
      }
    }
  ]
}